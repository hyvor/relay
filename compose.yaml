services:
  api:
    container_name: hyvor-relay-api
    build:
      context: .
      target: api-dev
    volumes:
      - ./api:/app/api
      #- ../internal:/app/api/vendor/hyvor/internal:ro
      # - ./shared:/app/shared
    labels:
      traefik.enable: true
      traefik.http.routers.hyvor-relay-api.rule: Host(`relay.hyvor.dev`)
      traefik.http.routers.hyvor-relay-api.entrypoints: https
      traefik.http.routers.hyvor-relay-api.tls: true
      traefik.http.routers.hyvor-relay-api.service: hyvor-relay-api
      traefik.http.services.hyvor-relay-api.loadbalancer.server.port: 80
    networks:
      - hyvor-network
    healthcheck:
      test: ls
      disable: true

  rabbitmq:
    image: rabbitmq:3-management
    container_name: hyvor-relay-rabbitmq
    ports:
      # - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - hyvor-network

#  worker:
#    build:
#      context: .
#      target: backend-dev
#    volumes:
#      - ./backend:/app/backend
#    networks:
#      - hyvor-network
#    healthcheck:
#      test: ls
#      disable: true
#    deploy:
#      replicas: 2

volumes:
  rabbitmq_data:

networks:
  hyvor-network:
    external: true
