name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  frontend-check:
    name: "Frontend Check"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t frontend-dev . --target frontend-dev

      - name: Run Svelte Check
        run: docker run frontend-dev bun run check

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t backend-dev . --target backend-dev

      - name: Run PHPStan
        run: |
          docker run backend-dev sh -c "
            php bin/console cache:warmup &&
            ./vendor/bin/phpstan analyse --memory-limit=1G --ansi"

  php-tests:
    name: "PHP Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up services
        run: |
          docker network create ci
          docker compose -f meta/ci/compose.ci.yaml up -d

      - name: Build Docker image
        run: docker build -t backend-dev . --target backend-dev

      - name: Run PHP Tests
        run: |
          touch coverage.xml
          docker run \
          --network ci \
          --mount type=bind,source=$(pwd)/coverage.xml,target=/app/coverage.xml \
          -e APP_ENV=test \
          backend-dev sh -c "
          php bin/console doctrine:migrations:migrate --no-interaction &&
          ./vendor/bin/phpunit --coverage-clover /app/coverage.xml"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.HYVOR_ORG_CODECOV_TOKEN }}
          slug: hyvor/relay
          files: /app/coverage.xml

  go-tests:
    name: "Go Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up services
        run: |
          docker network create ci
          docker compose -f meta/ci/compose.ci.yaml up -d

      - name: Build Docker image (Backend)
        run: docker build -t backend-dev . --target backend-dev

      - name: Run Migrations
        run: |
          docker run \
          --network ci \
          -e APP_ENV=test \
          backend-dev sh -c "php bin/console doctrine:migrations:migrate --no-interaction"

      - name: Build Docker image (Worker)
        run: docker build -t worker-dev . --target worker-dev

      # Database already migrated from the previous step.
      - name: Run Go Tests
        run: |
          docker run \
          --network ci \
          worker-dev sh -c "
          go test -v ./... -count=1 -p 1 -timeout 30s -coverprofile=coverage.txt"

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hyvor/relay

  go-staticcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4'

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@2025.1.1

      - name: Run staticcheck
        run: cd worker && staticcheck ./...
